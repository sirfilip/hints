// set client that do not follow redirects
client := &http.Client{
	CheckRedirect: func(req *http.Request, via []*http.Request) error {
		return http.ErrUseLastResponse
	},
}

// type hint switch for interfaces
switch obj.(type) {
	case int:
		// take care of int
	case string:
		// take care of string
}

// methods example
package main

import "fmt"

type Thing struct {
	Name string
}

func (t Thing) GetName() string {
	return t.Name
}

func (t *Thing) SetName(name string) {
	t.Name = name
}

func main() {
	t := Thing{"Filip"}
	fmt.Println(t.GetName())

	(&t).SetName("sirfilip")
	fmt.Println(t.GetName())
}

// there are print and println builtins!

// to get an svg representation of a pprof type 
(pprof) web

// to read profiles do 
$ go tool pprof name_of_the_binary pprof-out

// note that larger boxes mean more time spent in execution

// to run a memory profiler do
$ go test -run=XXX -bench=. -memprofile=m.p

// to run a cpu profile do
$ go test -run=XXX -bench=. -cpuprofile=c.p
